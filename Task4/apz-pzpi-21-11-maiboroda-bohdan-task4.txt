1 МОДЕЛЮВАННЯ ПРОГРАМНОЇ СИСТЕМИ


	Програмна частина розрахована на один тип користувачів, а саме на адміністратора системи, який зможе керувати даними програмної системи.
	Необхідним функціоналом адміністратора є: можливість перегляду списку компаній, редагування їх, створення нових, можливість редагування наявних компаній; можливість перегляду локацій, їх редагування, створення нових локацій, редагування наявних; можливість взаємодіяти з користувачами системи: редагування, видалення, перегляд, створення; перегляд та видалення результатів тестування, перегляд сповіщень. Окрім вищевказаних можливостей адміністратор може взаємодіяти з базою даних, а саме створювати резервні копії, завантажувати резервні копії, робити експорт даних. Взаємодію адміністратора з системою зображено на діаграмі прецедентів (див. рис. 1).
	Продукт має підтримку локалізації, надає користувачу інтерфейс англійською та українською мовами.


2 ТЕХНОЛОГІЇ ТА АРХІТЕКТУРНІ РІШЕННЯ


	Для реалізації клієнтської частини програмної системи було обрано мову програмування JavaScript, яка підтримується усіма сучасними веб-браузерами.
	Було вирішено використовувати фреймворк Vue.js для створення користувацького інтерфейсу, що дозволяє зручно генерувати HTML з даних, що зберігаються в JavaScript. У цьому проекті використовується стандартна структура проекту на Vue, яка включає всі необхідні інструменти для ефективної розробки.
	Щоб реалізувати багатосторінкову навігацію на сайті, було використано Vue Router, який забезпечує динамічну маршрутизацію у браузері.
	Для локалізації, використано бібліотеку i18next для ефективного впровадження багатомовного інтерфейсу та зручного перекладу текстів.
	Було створено діаграму пакетів для візуалізації залежностей між різними частинами програмного забезпечення.
	У процесі розробки програмного забезпечення використовувалася компонентна архітектура, що є стандартом для сучасних фреймворків для створення інтерфейсів. Залежності між компонентами зображені на діаграмі компонентів (див. додаток А.1).
	Користування програмним забезпеченням починається з домашньої сторінки. З цієї сторінки користувач може перейти до сторінки входу в систему, створення облікових записів, перегляду та редагування даних, а також до сторінки створення резервних копій бази даних. На кожній сторінці є посилання для навігації та кнопки вибору мови інтерфейсу: англійської або української.
	Для доступу до сторінок редагування даних та створення резервних копій користувач повинен пройти аутентифікацію та мати права адміністратора. Після введення своїх даних і відправлення запиту на сервер, браузер обробляє відповідь і встановлює Cookie, які будуть використовуватися для подальшої аутентифікації.
	Для полегшення розуміння взаємодії користувачів з клієнтською частиною системи була створена діаграма взаємодії (див. додаток А.2).
Під час проектування системи були визначені ключові технології та архітектурні рішення, які будуть використовуватися на наступних етапах розробки.
	Додаток Б містить приклади коду клієнтської частини системи.


ВИСНОВОК


	Під час виконання практичного завдання були набуті знання у розробці клієнтської частини програмного забезпечення. Результатом роботи стала програмна реалізація фронтенду, створена за допомогою JavaScript і Vue.js. У процесі розробки було дотримано передових методик для забезпечення якісної підтримки програмних рішень на обраній платформі.

