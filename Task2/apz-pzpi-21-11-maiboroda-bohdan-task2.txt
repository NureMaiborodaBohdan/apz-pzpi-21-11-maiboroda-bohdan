1 МОДЕЛЮВАННЯ ПРОГРАМНОЇ СИСТЕМИ


Програмна система передбачає два типи користувачів: адміністатор та працівник підприємства.
Основними потребами працівника підприємства є: 
-	перегляд результатів тестування; 
-	створення результатів тестування.
-	перегляд сповіщень
Основними потребами адміністратора є:
-	перегляд локацій, видалення локацій, редагування локацій, створення локацій;
-	перегляд результатів тестування, видалення результатів тестування;
-	перегляд сповіщень, видалення сповіщень;
-	перегляд компаній, видалення компаній, створення компаній, редагування компаній;
-	перегляд користувачів системи, редагування, видалення, створення нових користувачів.
-	робота з даними: експорт даних, резервна копія налаштувань та даних БД, відновлення резервної копії.
Взаємодію кожної ролі користувачів з системою представлено на діаграмі прецедентів (див. рис. 1).
За допомогою діаграми прецедентів було визначено функціональні потреби різних типів користувачів та взаємодію з програмною системою. 


2 ПРОЄКТУВАННЯ БАЗИ ДАНИХ 


Для проєктування бази даних було розроблено ER-діаграму (див. рис. 2). Вона складається з 7 таблиць: користувач (User), компація (Company), розташування (Location), результат тестування (TestResult), сповіщення (Notification), доступ до робітничої зони (AccessControl).
У базі наявні наступні зв’язки між сутностями:
-	розташування та компанія мають зв’язок один до одного, бо кожна компанія має лише одне місце розташування, але одне місце розташування може мати багато компаній;
-	компанія та користувач мають зв’язок один до багатьох, кожна компанія може мати багато користувачів, але кожен користувач належить тільки до однієї певної компанії;
-	користувач та результати тестування мають зв’язок один до багатьох, бо кожен користувач може мати багато результатів тестів, але кожен результат належить одному користувачеві;
-	користувач та контроль доступу до робітничої зони мають зв’язок один до багатьох, бо кожен користувач може мати багато записів контролю, але кожен запис стосується лише певного користувача.


3 ТЕХНОЛОГІЇ ТА АРХІТЕКТУРНІ РІШЕННЯ


	Для розробки серверної частини було обрано мову програмування Golang з використанням веб-фреймворку Gin. У якості бази даних використано MySQL, яка розвернута в контейнері Doker, доступ до якої здійснюється з серверної програми за допомогою SQL package in Go, що забезпечує зручний інтерфейс для взаємодії з базою даних. 
	На основі використаних технологій було розроблено діаграму розгортання (див. рис. 3).


4 СПЕЦИФІКАЦІЯ REST


REST API в програмній системі складається з 33 кінцевих точок. Кінцеві точки відповідають за надання даних клієнту та взаємодію з бізнес логікою.
Специфікація кожної кінцевої точки REST API міститься в таблиці 1.
За допомогою таблиці специфікації REST було визначено основні кінцеві точки для запитів до розробленого серверного застосунку.


ВИСНОВКИ


Під час виконання лабораторної роботи було здобуто досвід у проектуванні серверної частини програмної системи, розробці сценаріїв використання, створенні діаграм розгортання та пакетів, а також розробці бази даних. Було створено програмне забезпечення для серверної частини системи. При розробці продукту було дотримано вимоги до чистого коду на мові програмування Golang.



